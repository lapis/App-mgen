#!/perl

# no running under some shell
eval 'exec /usr/bin/perl -S $0 ${1+"$@"}' if 0;

use strict;
use warnings;
use App::mgen;

App::mgen->new->generate;

__END__

=head1 NAME

App::mgen - Generate the single module file

=head1 SYNOPSIS

mgen [options] [module_name]

    Options :
        --description=s Set description
        --author=s      Set author name
        --email=s       Set email
        --path=s        Set module root path
        --signature     Set signature. necessary set author and email
        --immutable     Use __PACKAGE__->meta->make_immutable
        --autoclearn    Use namespace::autoclearn
        --help          Output help
        --version       Output version
        --current       Create a module in current directory
        --moose         Use Moose
        --mouse         Use Mouse
        --moo           Use Moo
        --mo            Use Mo
        --m             Use M
    
    ENVs :
        PSTART_ROOT     Set default module root path
        PSTART_AUTHOR   Set default author name
        PSTART_EMAIL    Set default email

    e.g. :
        Generate standerd module
        $ mgen MyApp::Module

        Use Moose
        $ mgen --moose MyApp::Module

        Set description
        $ mgen --description="a module" MyApp::Module

        Set userdata (ENVs)
        $ export PSTART_ROOT=`pwd`
        $ export PSTART_AUTHOR="username"
        $ export PSTART_EMAIL="example@example.com"
        $ mgen MyApp::Module

        Set userdata (Options)
        $ mgen --path=`pwd` --author="username" --email="example@example.com" MyApp::Module
    
   mgen is supported various OO :
        Moose, Mouse, Moo, Mo, M
        Above all, I recommend M 

=head1 DESCRIPTION

App::mgen is generate the single module file.

=head1 AUTHOR

lapis_tw E<lt>lapis0896@gmail.comE<gt>

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
